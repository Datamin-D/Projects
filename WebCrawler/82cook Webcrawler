{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 82cook 웹크롤링"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "from urllib.request import urlopen, urlretrieve\n",
    "from bs4 import BeautifulSoup\n",
    "import time\n",
    "from random import randint\n",
    "import re\n",
    "import pandas as pd\n",
    "import pickle\n",
    "from tqdm import tqdm\n",
    "\n",
    "from random import *\n",
    "import random\n",
    "from selenium import webdriver\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.common.exceptions import NoSuchElementException\n",
    "from selenium.common import exceptions\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "from selenium.common.exceptions import TimeoutException\n",
    "\n",
    "import numpy as np\n",
    "\n",
    "wd = webdriver.Chrome(r\"C:\\Users\\mama\\Desktop\\ChromeDriver\\chromedriver.exe\")\n",
    "wait = WebDriverWait(wd, 15)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>content</th>\n",
       "      <th>writer</th>\n",
       "      <th>date</th>\n",
       "      <th>view</th>\n",
       "      <th>recommendation</th>\n",
       "      <th>board</th>\n",
       "      <th>url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: [(title,), (content,), (writer,), (date,), (view,), (recommendation,), (board,), (url,)]\n",
       "Index: []"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "col_name = ['title','content','writer','date','view','recommendation','board','url']\n",
    "df = pd.DataFrame([],columns = [col_name])\n",
    "\n",
    "df\n",
    "# 한번에 다 가져오지 말자.\n",
    "# 1. 셀레니움으로 게시판 게시글 별 url 가져오기\n",
    "    # q 한방에 뽱 url구해줄 수 있을까? page 접근을 통해.\n",
    "\n",
    "# 2. 저장된 url에 접근하여 bs 로 정보 가져오기."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. 셀레니움으로 게시판 게시글 별 url 가져오기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # 게시판 url수집중 ****\n",
    "\n",
    "\n",
    "\n",
    "# # 수집할 페이지 리스트\n",
    "# sal_dot_url = 'https://www.82cook.com/entiz/enti.php?bn=1&page=' # 살림 돋보기 url\n",
    "# living_dec_url = 'https://www.82cook.com/entiz/enti.php?bn=2&page=' #리빙데코 url\n",
    "# sal_question_url = 'https://www.82cook.com/entiz/enti.php?bn=3&page=' # 살림 물음표 url\n",
    "# url_list = [sal_dot_url, living_dec_url, sal_question_url]\n",
    "\n",
    "# sal_dot = []\n",
    "# living_dec = []\n",
    "# sal_question = []\n",
    "\n",
    "# #soup 객체\n",
    "# soup_url=urlopen('')\n",
    "# soup=BeautifulSoup(soup_url,'html.parser')\n",
    "\n",
    "\n",
    "# # 1. 살림돋보기 url 가져오기\n",
    "\n",
    "# #page 바꿔가며 게시글 url에 접근.\n",
    "# pages = 2\n",
    "# for page in tqdm(range(pages)):\n",
    "#     time.sleep(random.random()+0.5) # 잠시 쉬어라 for문..\n",
    "    \n",
    "#     url = url_list[0] + str(page+1)\n",
    "#     wd.get(url)\n",
    "    \n",
    "#     #제목이 나타날때까지 wait\n",
    "#     wait.until(EC.presence_of_all_elements_located((By.CSS_SELECTOR,'#bbs > table > tbody td.title > a'))) \n",
    "    \n",
    "#     # url 수집 ***************\n",
    "#     href_tag = '#bbs > table > tbody   td.title > a'\n",
    "#     # = wd.find_elements_by_css_selector()\n",
    "#     # soup 쓰자\n",
    "#     #urls = soup.find_all('a', {'class':'title'})\n",
    "#     #urls = soup.select('#bbs > table > tbody > tr td.title > a')\n",
    "    \n",
    "#     for cover in soup.find_all('td',{'class':'title'}):\n",
    "#         link = cover.select('a')[0].get('href')\n",
    "#         sal_dot.append(link)\n",
    "#     print(f\"urls:{sal_dot}\")\n",
    "#     # 현황\n",
    "#     if page % 100 == 0:\n",
    "#         print(f\"{page+1}까지 수집.\")\n",
    "\n",
    "# #wd.close\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1.Soup으로 url 가져오기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|████████████████████████████████████████████████████████████████████████████████| 600/600 [01:27<00:00,  6.82it/s]\n"
     ]
    }
   ],
   "source": [
    "# 게시판 url수집중 ****\n",
    "#[1. sal_dot]soup 으로 수집\n",
    "\n",
    "\n",
    "# 수집할 페이지 리스트\n",
    "sal_dot_url = 'https://www.82cook.com/entiz/enti.php?bn=1&page=' # 살림 돋보기 url\n",
    "living_dec_url = 'https://www.82cook.com/entiz/enti.php?bn=2&page=' #리빙데코 url\n",
    "sal_question_url = 'https://www.82cook.com/entiz/enti.php?bn=3&page=' # 살림 물음표 url\n",
    "url_list = [sal_dot_url, living_dec_url, sal_question_url]\n",
    "\n",
    "sal_dot_urls = []\n",
    "\n",
    "#[sal_dot]soup 으로 수집\n",
    "pages = 600\n",
    "for page in tqdm(range(pages)):\n",
    "    soup_url=urlopen(sal_dot_url + str(page))\n",
    "    soup=BeautifulSoup(soup_url,'html.parser')\n",
    "    for cover in soup.find_all('td',{'class':'title'}):\n",
    "        link = cover.select('a')[0].get('href')\n",
    "        #공지는 빼기\n",
    "        test = cover.select('a')[0].text\n",
    "        if test == \" 살림돋보기는...\":\n",
    "            #print('공지')\n",
    "            continue\n",
    "        sal_dot_urls.append('https://www.82cook.com/entiz/' + link)\n",
    "        \n",
    "        #print(sal_dot)\n",
    "\n",
    "#15950개 수집됨"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|████████████████████████████████████████████████████████████████████████████████| 100/100 [00:13<00:00,  7.47it/s]\n"
     ]
    }
   ],
   "source": [
    "# 게시판 url수집중 ****\n",
    "#[2. living_dec_urls]soup 으로 수집\n",
    "\n",
    "\n",
    "# 수집할 페이지 리스트\n",
    "sal_dot_url = 'https://www.82cook.com/entiz/enti.php?bn=1&page=' # 살림 돋보기 url\n",
    "living_dec_url = 'https://www.82cook.com/entiz/enti.php?bn=2&page=' #리빙데코 url\n",
    "sal_question_url = 'https://www.82cook.com/entiz/enti.php?bn=3&page=' # 살림 물음표 url\n",
    "url_list = [sal_dot_url, living_dec_url, sal_question_url]\n",
    "\n",
    "\n",
    "living_dec_urls = []\n",
    "\n",
    "#[sal_dot]soup 으로 수집\n",
    "pages = 100#100\n",
    "for page in tqdm(range(pages)):\n",
    "    soup_url=urlopen(living_dec_url + str(page))\n",
    "    soup=BeautifulSoup(soup_url,'html.parser')\n",
    "    for cover in soup.find_all('td',{'class':'title'}):\n",
    "        link = cover.select('a')[0].get('href')\n",
    "        #공지는 빼기\n",
    "        test = cover.select('a')[0].text\n",
    "        #print(test)\n",
    "        if test == \" 리빙데코는...\":\n",
    "            #print('공지')\n",
    "            continue\n",
    "        living_dec_urls.append('https://www.82cook.com/entiz/' + link)\n",
    "        \n",
    "        #print(living_dec_urls)\n",
    "\n",
    "#len(living_dec_urls) # 2845 개"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████████████████████████████████████████████████████████████████████████| 1200/1200 [02:59<00:00,  6.70it/s]\n"
     ]
    }
   ],
   "source": [
    "# 게시판 url수집중 ****\n",
    "#[3. sal_question_url]soup 으로 수집\n",
    "\n",
    "\n",
    "# 수집할 페이지 리스트\n",
    "sal_dot_url = 'https://www.82cook.com/entiz/enti.php?bn=1&page=' # 살림 돋보기 url\n",
    "living_dec_url = 'https://www.82cook.com/entiz/enti.php?bn=2&page=' #리빙데코 url\n",
    "sal_question_url = 'https://www.82cook.com/entiz/enti.php?bn=3&page=' # 살림 물음표 url\n",
    "url_list = [sal_dot_url, living_dec_url, sal_question_url]\n",
    "\n",
    "sal_question_urls = []\n",
    "#[sal_dot]soup 으로 수집\n",
    "pages = 1200\n",
    "for page in tqdm(range(pages)):\n",
    "    soup_url=urlopen(sal_question_url + str(page))\n",
    "    soup=BeautifulSoup(soup_url,'html.parser')\n",
    "    for cover in soup.find_all('td',{'class':'title'}):\n",
    "        link = cover.select('a')[0].get('href')\n",
    "        #공지는 빼기\n",
    "        test = cover.select('a')[0].text\n",
    "        #print(test)\n",
    "        if test == \" 살림물음표는...\":\n",
    "            #print('공지')\n",
    "            continue\n",
    "        sal_question_urls.append('https://www.82cook.com/entiz/' + link)\n",
    "        \n",
    "        #print(sal_dot)\n",
    "\n",
    "#35845 개 수집됨"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "url_list = [sal_dot_urls, living_dec_urls, sal_question_urls]\n",
    "#url_list 돌면서 수집하면됨."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "3it [00:00, ?it/s]"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 0\n",
      "1 1\n",
      "2 2\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "for i,num in tqdm(enumerate(range(3))):\n",
    "    print(i,num)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. 실제 url 돌며 수집"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "5945it [1:25:28,  1.16it/s]"
     ]
    }
   ],
   "source": [
    "#1. sal_dot_urls\n",
    "\n",
    "for index,url in tqdm(enumerate(sal_dot_urls)):\n",
    "    time.sleep(random.random() + 0.2)\n",
    "    soup_url = urlopen(url)\n",
    "    soup = BeautifulSoup(soup_url,'html.parser')\n",
    "    \n",
    "    #title\n",
    "    try:\n",
    "        title = soup.select('#column2 > h4 span')[1].text\n",
    "    except:\n",
    "        title = np.nan\n",
    "    #print(title)\n",
    "    \n",
    "    \n",
    "    #content\n",
    "    try:\n",
    "        content = soup.select('#articleBody')[0].text\n",
    "    except:\n",
    "        content = np.nan\n",
    "    \n",
    "    #writer    \n",
    "    try:\n",
    "        writer = soup.select('#readHead > div.readLeft > strong > a')[0].text\n",
    "    except:\n",
    "        writer = np.nan\n",
    "    \n",
    "    #date\n",
    "    try:\n",
    "        date = soup.select('#readHead > div.readRight')[0].text\n",
    "        date = date.strip()[6:]\n",
    "    except:\n",
    "        date = np.nan\n",
    "    #print(date)\n",
    "    \n",
    "    #view\n",
    "    try:\n",
    "        view_rec = soup.select('#readHead > div.readLeft')[0].text\n",
    "        #print(view_rec)\n",
    "        p_view = re.compile('조회수 : ([0-9]*,?[0-9]*)')\n",
    "        view = p_view.search(view_rec).group(1)\n",
    "    except:\n",
    "        view = np.nan\n",
    "    #print(view)\n",
    "    \n",
    "    #recommendation\n",
    "    try:\n",
    "        writer = soup.select('#readHead > div.readLeft > strong > a')[0].text\n",
    "        p_rec = re.compile('추천수 : ([0-9]*,?[0-9]*)')\n",
    "        recommendation = p_rec.search(view_rec).group(1)\n",
    "    except:\n",
    "        recommendation = np.nan\n",
    "    #print(recommendation)\n",
    "    \n",
    "    #board\n",
    "    board = 'sal_dot'\n",
    "    \n",
    "    df.loc[index] = title, content, writer, date, view, recommendation, board , url\n",
    "    #column2 > h4\n",
    "    \n",
    "    # title, content, writer, date, view, recommendation, board"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#2. living_dec_urls\n",
    "\n",
    "starting_index = index + 1\n",
    "\n",
    "for index,url in enumerate(tqdm(living_dec_urls)):\n",
    "    soup_url = urlopen(url)\n",
    "    soup = BeautifulSoup(soup_url,'html.parser')\n",
    "    \n",
    "    #title\n",
    "    try:\n",
    "        title = soup.select('#column2 > h4 span')[1].text\n",
    "    except:\n",
    "        title = np.nan\n",
    "    #print(title)\n",
    "    \n",
    "    \n",
    "    #content\n",
    "    try:\n",
    "        content = soup.select('#articleBody')[0].text\n",
    "    except:\n",
    "        content = np.nan\n",
    "    \n",
    "    #writer    \n",
    "    try:\n",
    "        writer = soup.select('#readHead > div.readLeft > strong > a')[0].text\n",
    "    except:\n",
    "        writer = np.nan\n",
    "    \n",
    "    #date\n",
    "    try:\n",
    "        date = soup.select('#readHead > div.readRight')[0].text\n",
    "        date = date.strip()[6:]\n",
    "    except:\n",
    "        date = np.nan\n",
    "    #print(date)\n",
    "    \n",
    "    #view\n",
    "    try:\n",
    "        view_rec = soup.select('#readHead > div.readLeft')[0].text\n",
    "        #print(view_rec)\n",
    "        p_view = re.compile('조회수 : ([0-9]*,?[0-9]*)')\n",
    "        view = p_view.search(view_rec).group(1)\n",
    "    except:\n",
    "        view = np.nan\n",
    "    #print(view)\n",
    "    \n",
    "    #recommendation\n",
    "    try:\n",
    "        writer = soup.select('#readHead > div.readLeft > strong > a')[0].text\n",
    "        p_rec = re.compile('추천수 : ([0-9]*,?[0-9]*)')\n",
    "        recommendation = p_rec.search(view_rec).group(1)\n",
    "    except:\n",
    "        recommendation = np.nan\n",
    "    #print(recommendation)\n",
    "    \n",
    "    #board\n",
    "    board = 'living_dec'\n",
    "    \n",
    "    ind = starting_index + index\n",
    "    df.loc[ind] = title, content, writer, date, view, recommendation, board , url\n",
    "    #column2 > h4\n",
    "    \n",
    "    # title, content, writer, date, view, recommendation, board"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>content</th>\n",
       "      <th>writer</th>\n",
       "      <th>date</th>\n",
       "      <th>view</th>\n",
       "      <th>recommendation</th>\n",
       "      <th>board</th>\n",
       "      <th>url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>(사진 첨부 후 재업로드) 무쇠팬 이거 망한 건가요?</td>\n",
       "      <td>ㅠㅠ 친정 사촌언니 추천으로 비싸게 주고 산 무쇠팬...\\n\\n\\n사용 전부터 녹...</td>\n",
       "      <td>가릉빈가</td>\n",
       "      <td>2021-01-05 17:12:17</td>\n",
       "      <td>2,598</td>\n",
       "      <td>0</td>\n",
       "      <td>sal_dot</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=1&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>중학생 핸드폰 어떻게 해야할가요?</td>\n",
       "      <td>안녕하세요 14살 아들과 5살 아들을 둔 유부녀 입니다 \\r\\n지금 저랑 14살 ...</td>\n",
       "      <td>오늘을열심히</td>\n",
       "      <td>2020-12-12 20:00:18</td>\n",
       "      <td>1,318</td>\n",
       "      <td>0</td>\n",
       "      <td>sal_dot</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=1&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>건조기 직렬 설치시 버튼이 넘 높아요</td>\n",
       "      <td>세탁기 위에. 건조기를 올려놓으려니 버튼조작부에 손이 안닿을듯하네요 \\n\\r\\n키...</td>\n",
       "      <td>두바퀴</td>\n",
       "      <td>2020-10-28 09:32:49</td>\n",
       "      <td>2,466</td>\n",
       "      <td>0</td>\n",
       "      <td>sal_dot</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=1&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>빌보 프렌치 가든- 밥그릇 국그릇 문의</td>\n",
       "      <td>\\r\\n안녕하세요.\\n\\n\\n\\n\\n잠시 미국에 살고 있어요.\\n\\n\\n\\n\\n있...</td>\n",
       "      <td>알뜰</td>\n",
       "      <td>2020-02-26 01:56:41</td>\n",
       "      <td>8,242</td>\n",
       "      <td>0</td>\n",
       "      <td>sal_dot</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=1&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>에어컨 실외기 설치 사례</td>\n",
       "      <td>\\r\\n복도식 아파트 복도에 실외기 설치\\r\\n\\r\\n\\n\\n\\n\\n보일러실 높은...</td>\n",
       "      <td>abcd</td>\n",
       "      <td>2019-08-08 16:33:13</td>\n",
       "      <td>11,137</td>\n",
       "      <td>0</td>\n",
       "      <td>sal_dot</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=1&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4706</th>\n",
       "      <td>집콕 모드 [앞치마, 휴지커버]</td>\n",
       "      <td>\\r\\n리빙데코에는 처음으로 글을 쓰게 되었네요^^\\n\\n\\n\\n\\n지금은 집에 ...</td>\n",
       "      <td>천안댁</td>\n",
       "      <td>2020-08-25 16:46:31</td>\n",
       "      <td>9,585</td>\n",
       "      <td>2</td>\n",
       "      <td>living_dec</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=2&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4707</th>\n",
       "      <td>봄밤</td>\n",
       "      <td>위에 글 제목처럼 몇번 비번 오류를 거친 끝에 \\n\\r\\n아주 오래된 로그인을 합...</td>\n",
       "      <td>민제</td>\n",
       "      <td>2020-05-10 00:44:56</td>\n",
       "      <td>7,262</td>\n",
       "      <td>0</td>\n",
       "      <td>living_dec</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=2&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4708</th>\n",
       "      <td>82쿡 정말 오랜만이네요</td>\n",
       "      <td>우연히 오늘 방문하게 되었네요\\n\\n\\n\\n\\r\\n비번이 가물가물ᆢ여기 비번은 숫...</td>\n",
       "      <td>프란체</td>\n",
       "      <td>2020-04-24 10:01:11</td>\n",
       "      <td>8,029</td>\n",
       "      <td>0</td>\n",
       "      <td>living_dec</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=2&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4709</th>\n",
       "      <td>지금 상단 광고나오는 B*NS  가구  보고있으니 혈압올라요</td>\n",
       "      <td>\\r\\n  저 가구회사가  마케팅을   잘했는지  저도 괜찮을거라고 해서 구입했지...</td>\n",
       "      <td>주니엄마</td>\n",
       "      <td>2020-01-25 22:58:21</td>\n",
       "      <td>12,136</td>\n",
       "      <td>0</td>\n",
       "      <td>living_dec</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=2&amp;num...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4710</th>\n",
       "      <td>내일 떠나요~~ 모두들 행복한 크리스마스 보내세요~~</td>\n",
       "      <td>디즈니 크루즈의 풍습, 물고기 고리 선물 교환 준비를 마침내 모두 마쳤습니다.\\r...</td>\n",
       "      <td>소년공원</td>\n",
       "      <td>2019-12-19 23:49:06</td>\n",
       "      <td>12,818</td>\n",
       "      <td>1</td>\n",
       "      <td>living_dec</td>\n",
       "      <td>https://www.82cook.com/entiz/read.php?bn=2&amp;num...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4711 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    title  \\\n",
       "0          (사진 첨부 후 재업로드) 무쇠팬 이거 망한 건가요?    \n",
       "1                      중학생 핸드폰 어떻게 해야할가요?   \n",
       "2                    건조기 직렬 설치시 버튼이 넘 높아요   \n",
       "3                   빌보 프렌치 가든- 밥그릇 국그릇 문의   \n",
       "4                           에어컨 실외기 설치 사례   \n",
       "...                                   ...   \n",
       "4706                    집콕 모드 [앞치마, 휴지커버]   \n",
       "4707                                   봄밤   \n",
       "4708                        82쿡 정말 오랜만이네요   \n",
       "4709  지금 상단 광고나오는 B*NS  가구  보고있으니 혈압올라요     \n",
       "4710        내일 떠나요~~ 모두들 행복한 크리스마스 보내세요~~   \n",
       "\n",
       "                                                content  writer  \\\n",
       "0      ㅠㅠ 친정 사촌언니 추천으로 비싸게 주고 산 무쇠팬...\\n\\n\\n사용 전부터 녹...    가릉빈가   \n",
       "1      안녕하세요 14살 아들과 5살 아들을 둔 유부녀 입니다 \\r\\n지금 저랑 14살 ...  오늘을열심히   \n",
       "2      세탁기 위에. 건조기를 올려놓으려니 버튼조작부에 손이 안닿을듯하네요 \\n\\r\\n키...     두바퀴   \n",
       "3      \\r\\n안녕하세요.\\n\\n\\n\\n\\n잠시 미국에 살고 있어요.\\n\\n\\n\\n\\n있...      알뜰   \n",
       "4      \\r\\n복도식 아파트 복도에 실외기 설치\\r\\n\\r\\n\\n\\n\\n\\n보일러실 높은...    abcd   \n",
       "...                                                 ...     ...   \n",
       "4706   \\r\\n리빙데코에는 처음으로 글을 쓰게 되었네요^^\\n\\n\\n\\n\\n지금은 집에 ...     천안댁   \n",
       "4707   위에 글 제목처럼 몇번 비번 오류를 거친 끝에 \\n\\r\\n아주 오래된 로그인을 합...      민제   \n",
       "4708   우연히 오늘 방문하게 되었네요\\n\\n\\n\\n\\r\\n비번이 가물가물ᆢ여기 비번은 숫...     프란체   \n",
       "4709   \\r\\n  저 가구회사가  마케팅을   잘했는지  저도 괜찮을거라고 해서 구입했지...    주니엄마   \n",
       "4710   디즈니 크루즈의 풍습, 물고기 고리 선물 교환 준비를 마침내 모두 마쳤습니다.\\r...    소년공원   \n",
       "\n",
       "                     date    view recommendation       board  \\\n",
       "0     2021-01-05 17:12:17   2,598              0     sal_dot   \n",
       "1     2020-12-12 20:00:18   1,318              0     sal_dot   \n",
       "2     2020-10-28 09:32:49   2,466              0     sal_dot   \n",
       "3     2020-02-26 01:56:41   8,242              0     sal_dot   \n",
       "4     2019-08-08 16:33:13  11,137              0     sal_dot   \n",
       "...                   ...     ...            ...         ...   \n",
       "4706  2020-08-25 16:46:31   9,585              2  living_dec   \n",
       "4707  2020-05-10 00:44:56   7,262              0  living_dec   \n",
       "4708  2020-04-24 10:01:11   8,029              0  living_dec   \n",
       "4709  2020-01-25 22:58:21  12,136              0  living_dec   \n",
       "4710  2019-12-19 23:49:06  12,818              1  living_dec   \n",
       "\n",
       "                                                    url  \n",
       "0     https://www.82cook.com/entiz/read.php?bn=1&num...  \n",
       "1     https://www.82cook.com/entiz/read.php?bn=1&num...  \n",
       "2     https://www.82cook.com/entiz/read.php?bn=1&num...  \n",
       "3     https://www.82cook.com/entiz/read.php?bn=1&num...  \n",
       "4     https://www.82cook.com/entiz/read.php?bn=1&num...  \n",
       "...                                                 ...  \n",
       "4706  https://www.82cook.com/entiz/read.php?bn=2&num...  \n",
       "4707  https://www.82cook.com/entiz/read.php?bn=2&num...  \n",
       "4708  https://www.82cook.com/entiz/read.php?bn=2&num...  \n",
       "4709  https://www.82cook.com/entiz/read.php?bn=2&num...  \n",
       "4710  https://www.82cook.com/entiz/read.php?bn=2&num...  \n",
       "\n",
       "[4711 rows x 8 columns]"
      ]
     },
     "execution_count": 178,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#3. sal_question_urls\n",
    "\n",
    "starting_index = index + 1\n",
    "\n",
    "for index,url in enumerate(tqdm(sal_question_urls)):\n",
    "    soup_url = urlopen(url)\n",
    "    soup = BeautifulSoup(soup_url,'html.parser')\n",
    "    \n",
    "    #title\n",
    "    try:\n",
    "        title = soup.select('#column2 > h4 span')[1].text\n",
    "    except:\n",
    "        title = np.nan\n",
    "    #print(title)\n",
    "    \n",
    "    \n",
    "    #content\n",
    "    try:\n",
    "        content = soup.select('#articleBody')[0].text\n",
    "    except:\n",
    "        content = np.nan\n",
    "    \n",
    "    #writer    \n",
    "    try:\n",
    "        writer = soup.select('#readHead > div.readLeft > strong > a')[0].text\n",
    "    except:\n",
    "        writer = np.nan\n",
    "    \n",
    "    #date\n",
    "    try:\n",
    "        date = soup.select('#readHead > div.readRight')[0].text\n",
    "        date = date.strip()[6:]\n",
    "    except:\n",
    "        date = np.nan\n",
    "    #print(date)\n",
    "    \n",
    "    #view\n",
    "    try:\n",
    "        view_rec = soup.select('#readHead > div.readLeft')[0].text\n",
    "        #print(view_rec)\n",
    "        p_view = re.compile('조회수 : ([0-9]*,?[0-9]*)')\n",
    "        view = p_view.search(view_rec).group(1)\n",
    "    except:\n",
    "        view = np.nan\n",
    "    #print(view)\n",
    "    \n",
    "    #recommendation\n",
    "    try:\n",
    "        writer = soup.select('#readHead > div.readLeft > strong > a')[0].text\n",
    "        p_rec = re.compile('추천수 : ([0-9]*,?[0-9]*)')\n",
    "        recommendation = p_rec.search(view_rec).group(1)\n",
    "    except:\n",
    "        recommendation = np.nan\n",
    "    #print(recommendation)\n",
    "    \n",
    "    #board\n",
    "    board = 'sal_question'\n",
    "    \n",
    "    ind = starting_index + index\n",
    "    df.loc[ind] = title, content, writer, date, view, recommendation, board , url\n",
    "    #column2 > h4\n",
    "    \n",
    "    # title, content, writer, date, view, recommendation, board"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "위 까지가 숙제입니다! 감사합니다:)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_csv(r'C:\\Users\\mama\\Desktop\\수업\\2학기\\82cook.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "ename": "error",
     "evalue": "multiple repeat at position 13",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31merror\u001b[0m                                     Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-146-54b0feb40e09>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;31m#view\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 2\u001b[1;33m \u001b[0mp_view\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mre\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'조회수 : ([0-9]?*,?[0-9]*)'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      3\u001b[0m \u001b[0mview\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mp_view\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msearch\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mview\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mgroup\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m \u001b[0mview\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\re.py\u001b[0m in \u001b[0;36mcompile\u001b[1;34m(pattern, flags)\u001b[0m\n\u001b[0;32m    232\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mcompile\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    233\u001b[0m     \u001b[1;34m\"Compile a regular expression pattern, returning a Pattern object.\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 234\u001b[1;33m     \u001b[1;32mreturn\u001b[0m \u001b[0m_compile\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    235\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    236\u001b[0m \u001b[1;32mdef\u001b[0m \u001b[0mpurge\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\re.py\u001b[0m in \u001b[0;36m_compile\u001b[1;34m(pattern, flags)\u001b[0m\n\u001b[0;32m    284\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0msre_compile\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0misstring\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    285\u001b[0m         \u001b[1;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"first argument must be string or compiled pattern\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 286\u001b[1;33m     \u001b[0mp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0msre_compile\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mpattern\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    287\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[1;33m(\u001b[0m\u001b[0mflags\u001b[0m \u001b[1;33m&\u001b[0m \u001b[0mDEBUG\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    288\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0m_cache\u001b[0m\u001b[1;33m)\u001b[0m \u001b[1;33m>=\u001b[0m \u001b[0m_MAXCACHE\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\sre_compile.py\u001b[0m in \u001b[0;36mcompile\u001b[1;34m(p, flags)\u001b[0m\n\u001b[0;32m    762\u001b[0m     \u001b[1;32mif\u001b[0m \u001b[0misstring\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mp\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    763\u001b[0m         \u001b[0mpattern\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mp\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 764\u001b[1;33m         \u001b[0mp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0msre_parse\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mparse\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mp\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mflags\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    765\u001b[0m     \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    766\u001b[0m         \u001b[0mpattern\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\sre_parse.py\u001b[0m in \u001b[0;36mparse\u001b[1;34m(str, flags, pattern)\u001b[0m\n\u001b[0;32m    928\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    929\u001b[0m     \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 930\u001b[1;33m         \u001b[0mp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0m_parse_sub\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0msource\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mpattern\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mflags\u001b[0m \u001b[1;33m&\u001b[0m \u001b[0mSRE_FLAG_VERBOSE\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;36m0\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    931\u001b[0m     \u001b[1;32mexcept\u001b[0m \u001b[0mVerbose\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    932\u001b[0m         \u001b[1;31m# the VERBOSE flag was switched on inside the pattern.  to be\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\sre_parse.py\u001b[0m in \u001b[0;36m_parse_sub\u001b[1;34m(source, state, verbose, nested)\u001b[0m\n\u001b[0;32m    424\u001b[0m     \u001b[1;32mwhile\u001b[0m \u001b[1;32mTrue\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    425\u001b[0m         itemsappend(_parse(source, state, verbose, nested + 1,\n\u001b[1;32m--> 426\u001b[1;33m                            not nested and not items))\n\u001b[0m\u001b[0;32m    427\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0msourcematch\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"|\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    428\u001b[0m             \u001b[1;32mbreak\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\sre_parse.py\u001b[0m in \u001b[0;36m_parse\u001b[1;34m(source, state, verbose, nested, first)\u001b[0m\n\u001b[0;32m    814\u001b[0m             sub_verbose = ((verbose or (add_flags & SRE_FLAG_VERBOSE)) and\n\u001b[0;32m    815\u001b[0m                            not (del_flags & SRE_FLAG_VERBOSE))\n\u001b[1;32m--> 816\u001b[1;33m             \u001b[0mp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0m_parse_sub\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0msource\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstate\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0msub_verbose\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mnested\u001b[0m \u001b[1;33m+\u001b[0m \u001b[1;36m1\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    817\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0msource\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mmatch\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\")\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    818\u001b[0m                 raise source.error(\"missing ), unterminated subpattern\",\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\sre_parse.py\u001b[0m in \u001b[0;36m_parse_sub\u001b[1;34m(source, state, verbose, nested)\u001b[0m\n\u001b[0;32m    424\u001b[0m     \u001b[1;32mwhile\u001b[0m \u001b[1;32mTrue\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    425\u001b[0m         itemsappend(_parse(source, state, verbose, nested + 1,\n\u001b[1;32m--> 426\u001b[1;33m                            not nested and not items))\n\u001b[0m\u001b[0;32m    427\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0msourcematch\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"|\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    428\u001b[0m             \u001b[1;32mbreak\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\sre_parse.py\u001b[0m in \u001b[0;36m_parse\u001b[1;34m(source, state, verbose, nested, first)\u001b[0m\n\u001b[0;32m    652\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mitem\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;32min\u001b[0m \u001b[0m_REPEATCODES\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    653\u001b[0m                 raise source.error(\"multiple repeat\",\n\u001b[1;32m--> 654\u001b[1;33m                                    source.tell() - here + len(this))\n\u001b[0m\u001b[0;32m    655\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0mitem\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;32mis\u001b[0m \u001b[0mSUBPATTERN\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    656\u001b[0m                 \u001b[0mgroup\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0madd_flags\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdel_flags\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mitem\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31merror\u001b[0m: multiple repeat at position 13"
     ]
    }
   ],
   "source": [
    "#view\n",
    "p_view = re.compile('조회수 : ([0-9]?*,?[0-9]*)')\n",
    "view = p_view.search(view_rec).group(1)\n",
    "view"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'NoneType' object has no attribute 'group'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-142-6c7c098b22f5>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0mview\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mview\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;33m-\u001b[0m\u001b[1;36m15\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[0mp_rec\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mre\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'추천수 : ([0-9]*)'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 4\u001b[1;33m \u001b[0mrecommendation\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mp_rec\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msearch\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mview\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mgroup\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      5\u001b[0m \u001b[0mrecoomendation\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mAttributeError\u001b[0m: 'NoneType' object has no attribute 'group'"
     ]
    }
   ],
   "source": [
    "#rec\n",
    "view = view[-15:]\n",
    "p_rec = re.compile('추천수 : ([0-9]*)')\n",
    "recommendation = p_rec.search(view).group()\n",
    "recoomendation\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2'"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "view_rec\n",
    "p_rec = re.compile('추천수 : ([0-9]*,?[0-9]*)')\n",
    "recommendation = p_rec.search(view_rec).group(1)\n",
    "recommendation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\n쯩호엄마  |\\n                    조회수 : 32,414  |\\n                    추천수 : 2\\n'"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "view_rec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 2. 리빙데코 \n",
    "page = 590\n",
    "    \n",
    "# 3. 살림 물음표 \n",
    "page = 1194"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# url만 가져오기 \n",
    "#타이틀 가져오고\n",
    "#stale 문제 고치기\n",
    "\n",
    "page = 2 # 1900로 하기\n",
    "\n",
    "# 진짜 코드\n",
    "error_posts_title = [] # 다시 클릭시킬 포스트 타이틀. 검색하셈 나중에. \n",
    "titles = [] **** titles.append(- ) 코드 추가!!해야됨\n",
    "Bodys = []\n",
    "for current_page in range(page):\n",
    "    print(f\"현재 페이지: {current_page}\")\n",
    "    url = \"https://www.82cook.com/entiz/enti.php?bn=8&page=\" + str(current_page)\n",
    "    title_tag = \"#bbs > table > tbody > tr\"\n",
    "    wd.get(url)\n",
    "    try:\n",
    "      wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, title_tag)))\n",
    "    except TimeoutException:\n",
    "      wd.get(url) #\n",
    "      time.sleep(random() + 0.8)\n",
    "    print(\"url 접근 완료\")\n",
    "    #url 접근 완료\n",
    "    \n",
    "    # 게시글 접근 \n",
    "    posts = wd.find_elements_by_css_selector(title_tag)\n",
    "    for post in posts:\n",
    "        try:\n",
    "            post.click()\n",
    "            time.sleep(random()+0.8))\n",
    "        except:\n",
    "            error_posts_title.append(post.text)\n",
    "        # 수집\n",
    "        body_tag = \"div#articleBody\"\n",
    "        #title = '#column2 > h4 > span:nth-child(2)' *** title 가져오기 !\n",
    "        BodyTag = wd.find_element_by_css_selector(body_tag)\n",
    "        Bodys.append(BodyTag.text)\n",
    "        # 뒤로가기\n",
    "        wd.back()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "현재 페이지: 0\n",
      "url 접근 완료\n",
      "현재 페이지: 1\n",
      "url 접근 완료\n"
     ]
    }
   ],
   "source": [
    "#타이틀 가져오고\n",
    "#stale 문제 고치기\n",
    "\n",
    "page = 2 # 1900로 하기\n",
    "\n",
    "# 진짜 코드\n",
    "error_posts_title = [] # 다시 클릭시킬 포스트 타이틀. 검색하셈 나중에. \n",
    "titles = [] **** titles.append(- ) 코드 추가!!해야됨\n",
    "Bodys = []\n",
    "for current_page in range(page):\n",
    "    print(f\"현재 페이지: {current_page}\")\n",
    "    url = \"https://www.82cook.com/entiz/enti.php?bn=8&page=\" + str(current_page)\n",
    "    title_tag = \"#bbs > table > tbody > tr\"\n",
    "    wd.get(url)\n",
    "    try:\n",
    "      wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, title_tag)))\n",
    "    except TimeoutException:\n",
    "      wd.get(url) #\n",
    "      time.sleep(random() + 0.8)\n",
    "    print(\"url 접근 완료\")\n",
    "    #url 접근 완료\n",
    "    \n",
    "    # 게시글 접근 \n",
    "    posts = wd.find_elements_by_css_selector(title_tag)\n",
    "    for post in posts:\n",
    "        try:\n",
    "            post.click()\n",
    "            time.sleep(random()+0.8))\n",
    "        except:\n",
    "            error_posts_title.append(post.text)\n",
    "        # 수집\n",
    "        body_tag = \"div#articleBody\"\n",
    "        #title = '#column2 > h4 > span:nth-child(2)' *** title 가져오기 !\n",
    "        BodyTag = wd.find_element_by_css_selector(body_tag)\n",
    "        Bodys.append(BodyTag.text)\n",
    "        # 뒤로가기\n",
    "        wd.back()\n",
    "\n",
    "\n",
    "    \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "ename": "StaleElementReferenceException",
     "evalue": "Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=89.0.4389.90)\n",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mStaleElementReferenceException\u001b[0m            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-50-6c0edf016ea4>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m     11\u001b[0m \u001b[0mposts\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mfind_elements_by_css_selector\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtitle_tag\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     12\u001b[0m \u001b[1;32mfor\u001b[0m \u001b[0mpost\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mposts\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 13\u001b[1;33m     \u001b[0mpost\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mclick\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     14\u001b[0m     \u001b[0mtime\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mrandom\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m+\u001b[0m\u001b[1;36m1.8\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     15\u001b[0m     \u001b[0mwd\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mback\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\u001b[0m in \u001b[0;36mclick\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m     78\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0mclick\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     79\u001b[0m         \u001b[1;34m\"\"\"Clicks the element.\"\"\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 80\u001b[1;33m         \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_execute\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mCommand\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mCLICK_ELEMENT\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     81\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     82\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0msubmit\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\u001b[0m in \u001b[0;36m_execute\u001b[1;34m(self, command, params)\u001b[0m\n\u001b[0;32m    631\u001b[0m             \u001b[0mparams\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m{\u001b[0m\u001b[1;33m}\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    632\u001b[0m         \u001b[0mparams\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'id'\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_id\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 633\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_parent\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    634\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    635\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0mfind_element\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mby\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mBy\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mID\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;32mNone\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\u001b[0m in \u001b[0;36mexecute\u001b[1;34m(self, driver_command, params)\u001b[0m\n\u001b[0;32m    319\u001b[0m         \u001b[0mresponse\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcommand_executor\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdriver_command\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    320\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mresponse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 321\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0merror_handler\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcheck_response\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    322\u001b[0m             response['value'] = self._unwrap_value(\n\u001b[0;32m    323\u001b[0m                 response.get('value', None))\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\u001b[0m in \u001b[0;36mcheck_response\u001b[1;34m(self, response)\u001b[0m\n\u001b[0;32m    240\u001b[0m                 \u001b[0malert_text\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'alert'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'text'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    241\u001b[0m             \u001b[1;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0malert_text\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 242\u001b[1;33m         \u001b[1;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    243\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    244\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_value_or_default\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mobj\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdefault\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mStaleElementReferenceException\u001b[0m: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=89.0.4389.90)\n"
     ]
    }
   ],
   "source": [
    "# #실험용\n",
    "# 82 cook url 접근\n",
    "url = \"https://www.82cook.com/entiz/enti.php?bn=8&page=1\"\n",
    "title_tag = \"#bbs > table > tbody > tr\"\n",
    "wd.get(url)\n",
    "try:\n",
    "  wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, title_tag)))\n",
    "except TimeoutException:\n",
    "  wd.get(url) #\n",
    "  time.sleep(1)\n",
    "posts = wd.find_elements_by_css_selector(title_tag)\n",
    "for post in posts: # \n",
    "    post.click()\n",
    "    time.sleep(random()+1.8)\n",
    "      #수집\n",
    "    BodyTag = wd.find_element_by_css_selector(body_tag)\n",
    "    Body = BodyTag.text\n",
    "    \n",
    "    # 안되면 url 확보\n",
    "    wd.back()\n",
    "    \n",
    "    \n",
    "    #\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'전기오븐에 빵을 구우면 위에는 색깔이 좋은데 밑바닥이 너무 까맣게 되네요.\\n컨벡션 오븐에 베이크로 맞춰도 그렇네요...\\n석쇠위에 바로 빵틀을 올려서도 해보고요... 사각 철판 한개 더 되고 그위에 빵틀 올려도 똑같네요..\\n오븐이 안좋아서 그런가요? ㅡ.ㅡ\\n고수 님들 팁 부탁드립니다.'"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "body_tag = \"div#articleBody\"\n",
    "#body_tag = '#column2 > h4 > span:nth-child(2)'\n",
    "BodyTag = wd.find_element_by_css_selector(body_tag)\n",
    "BodyTag.text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 텍마 쉅 - cha lab crawler\n",
    "url = \n",
    "wd.get(url)\n",
    "\n",
    "# xpath로 하는게 좋다..\n",
    "# '원하는 범위의 값을 가진 태그' 사용 가능.하다함.\n",
    "\n",
    "#스크롤 위치를, 최대한 내리게할 수 있다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. 저장된 url에 접근하여 bs 로 정보 가져오기."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
